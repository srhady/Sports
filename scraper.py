import time
import re
from datetime import datetime
import pytz
import logging
from selenium import webdriver
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from webdriver_manager.chrome import ChromeDriverManager

# --- Configuration ---
TARGET_URL = "https://crichd.com.co/"
OUTPUT_FILE = "crichd_playlist.m3u"
LOG_LEVEL = logging.INFO

# --- Setup Logging ---
logging.basicConfig(level=LOG_LEVEL, format='%(asctime)s - %(levelname)s - %(message)s')

def setup_driver():
    """GitHub Actions-এর জন্য Selenium WebDriver সেটআপ করে।"""
    logging.info("Setting up headless Chrome WebDriver.")
    options = Options()
    options.add_argument("--headless")
    options.add_argument("--no-sandbox")
    options.add_argument("--disable-dev-shm-usage")
    options.add_argument("--window-size=1920,1080")
    options.add_argument("user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36")
    
    try:
        service = Service(ChromeDriverManager().install())
        driver = webdriver.Chrome(service=service, options=options)
        logging.info("WebDriver setup successful.")
        return driver
    except Exception as e:
        logging.critical(f"Failed to setup WebDriver: {e}")
        return None

def get_channel_info(driver):
    """মূল পাতা থেকে সব চ্যানেলের লিঙ্ক এবং নাম সংগ্রহ করে।"""
    logging.info(f"Navigating to main page: {TARGET_URL}")
    driver.get(TARGET_URL)
    channels = []
    try:
        # চ্যানেলের তালিকা লোড হওয়ার জন্য অপেক্ষা করা হয়
        WebDriverWait(driver, 30).until(
            EC.presence_of_element_located((By.CSS_SELECTOR, "a.text-decoration-none"))
        )
        # crichd.com.co-এর গঠন অনুযায়ী সঠিক সিলেক্টর ব্যবহার করা হয়েছে
        elements = driver.find_elements(By.CSS_SELECTOR, "a.text-decoration-none")
        for elem in elements:
            href = elem.get_attribute('href')
            # চ্যানেলের নামটি h6 ট্যাগের মধ্যে থাকে
            title_elem = elem.find_element(By.CSS_SELECTOR, "h6.text-white")
            title = title_elem.text.strip()
            if href and title:
                channels.append({'title': title, 'url': href})
        logging.info(f"Found {len(channels)} channels.")
    except Exception as e:
        logging.error(f"Could not get channel list: {e}")
    return channels

def extract_stream_url(driver, channel_url):
    """চ্যানেলের পাতা থেকে .m3u8 লিঙ্ক খুঁজে বের করে।"""
    logging.info(f"Processing channel: {channel_url}")
    try:
        driver.get(channel_url)
        # প্লেয়ারটি একটি iframe-এর মধ্যে থাকে, তাই আমাদের সেই iframe-এ প্রবেশ করতে হবে
        WebDriverWait(driver, 30).until(
            EC.frame_to_be_available_and_switch_to_it((By.TAG_NAME, "iframe"))
        )
        
        # iframe-এর সোর্স কোড থেকে .m3u8 লিঙ্ক খোঁজা হয়
        page_source = driver.page_source
        match = re.search(r'["\'](https?://[^"\']+\.m3u8[^"\']*)["\']', page_source)
        
        if match:
            stream_url = match.group(1).replace('\\', '')
            logging.info(f"Stream URL found for {channel['title']}")
            return stream_url
    except Exception as e:
        logging.warning(f"Could not find stream for {channel_url}. Reason: {e}")
    finally:
        # পরের চ্যানেলের জন্য মূল পেজে ফিরে আসা
        driver.switch_to.default_content()
    return None

def main():
    """স্ক্র্যাপার চালানোর মূল ফাংশন।"""
    driver = setup_driver()
    if not driver:
        return

    try:
        channels = get_channel_info(driver)
        if not channels:
            return

        playlist_entries = []
        for channel in channels:
            stream_url = extract_stream_url(driver, channel['url'])
            if stream_url:
                # আপনার দেওয়া ফরম্যাট অনুযায়ী এন্ট্রি তৈরি করা
                entry = f"#EXTINF:-1 tvg-name=\"{channel['title']}\" group-title=\"CricHD\",{channel['title']}\n{stream_url}"
                playlist_entries.append(entry)
            time.sleep(1) # প্রতিটি অনুরোধের মাঝে কিছুটা বিরতি

        if not playlist_entries:
            logging.warning("No working streams found. Playlist file will not be updated.")
            return

        # --- M3U ফাইল তৈরি ---
        bd_timezone = pytz.timezone("Asia/Dhaka")
        update_time = datetime.now(bd_timezone).strftime('%Y-%m-%d %H:%M:%S')
        m3u_header = f"#EXTM3U\n# Generated by GitHub Actions for crichd.com.co\n# Last Updated: {update_time} (BD Time)\n"
        
        with open(OUTPUT_FILE, 'w', encoding='utf-8') as f:
            f.write(m3u_header)
            f.write("\n\n".join(playlist_entries))
        
        logging.info(f"Playlist file '{OUTPUT_FILE}' created successfully with {len(playlist_entries)} channels.")

    finally:
        logging.info("Closing WebDriver.")
        driver.quit()

if __name__ == "__main__":
    main()

